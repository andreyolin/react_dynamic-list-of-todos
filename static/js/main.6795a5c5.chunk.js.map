{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","onSelect","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onQueryChange","status","onStatusChange","onAppliedQueryChange","onResetAppliedQueryChange","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","useState","user","setUser","useEffect","getUser","href","email","name","App","setTodos","setSelectedTodo","setQuery","appliedQuery","setAppliedQuery","setStatus","debounce","useCallback","f","timerId","clearTimeout","args","filteredbyQuery","useMemo","filter","toLocaleLowerCase","includes","trim","getVisibleTodos","Status","Active","Complited","All","visibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"6PAUaA,EAA4BC,IAAMC,MAC7C,YAIO,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRF,UAAWG,IACT,CAAE,6BAAyC,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,KAJ7D,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IACZ,CAAE,mBAAoBD,EAAKG,WAC3B,CAAE,mBAAoBH,EAAKG,YAF7B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAASI,IAJ1B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IACZ,MACA,CAAE,UAAsB,OAAZJ,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,IACtC,CAAE,gBAA4B,OAAZL,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOF,EAAKE,eAlC/CF,EAAKE,eCvBXK,EAA8Bd,IAAMC,MAC/C,YAOO,IANLc,EAMI,EANJA,MACAC,EAKI,EALJA,cACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,0BAEA,OACE,uBAAMf,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRgB,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAeK,EAAMC,OAAOH,QAHnD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVoB,YAAY,YACZJ,MAAON,EACPO,SAAU,SAAAC,GACRP,EAAcO,EAAMC,OAAOH,OAC3BF,EAAqBI,EAAMC,OAAOH,UAGtC,sBAAMhB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdU,GACC,sBAAMV,UAAU,gBAAgBqB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRf,KAAK,SACLP,UAAU,SACVQ,QAAS,WACPG,EAAc,IACdI,kBCjDlB,SAASQ,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmBvC,IAAMC,MACpC,kBACE,qBAAKI,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,yBCKRmC,EAA6BxC,IAAMC,MAC9C,YAAyB,IAAtBM,EAAqB,EAArBA,KAAMJ,EAAe,EAAfA,SAELM,EAGEF,EAHFE,GACAE,EAEEJ,EAFFI,MACA8B,EACElC,EADFkC,OAGF,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,YFES,SAACJ,GAAD,OAAoBb,EAAG,iBAAiBa,KEDzDK,CAAQL,GAAQN,KAAKS,KACpB,IAGD,sBAAKvC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYI,KAIZ,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACP+B,EAAQ,MACRzC,EAAS,YAKf,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGM,IAGH,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACGE,EAAKG,UACF,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAG0C,KAAMJ,EAAKK,MAAd,SACGL,EAAKM,gBApCd,cAAC,EAAD,UCbGC,EAAgB,WAC3B,MAA0BR,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAciD,EAAd,KACA,EAAwCT,mBAAsB,MAA9D,mBAAOtC,EAAP,KAAqBgD,EAArB,KACA,EAA0BV,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcsC,EAAd,KACA,EAAwCX,mBAAS,IAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAA4Bb,mBAAS,OAArC,mBAAOzB,EAAP,KAAeuC,EAAf,KAEAX,qBAAU,WHHkBjB,EAAY,UGI3BO,KAAKgB,KACf,IAEH,IAAMM,EAAWC,uBAAY,SAACC,EAA0B7B,GACtD,IAAI8B,EAEJ,OAAO,WACLC,aAAaD,GADe,2BAAnBE,EAAmB,yBAAnBA,EAAmB,gBAE5BF,EAAU1B,WAAU,WAAV,GAAWyB,EAAG7B,GAAd,OAAwBgC,OAEnC,IAEG3D,EAAWuD,sBAAYN,EAAiB,IAExClC,EAAiBwC,sBAAYF,EAAW,IAExCxC,EAAgB0C,sBAAYL,EAAU,IAEtClC,EAAuBuC,sBAC3BD,EAASF,EAAiB,KAAO,IAK7BQ,EAAkBC,mBAAQ,kBAAM9D,EAAM+D,QAAO,SAAA1D,GAAI,OACrDA,EAAKI,MAAMuD,oBAAoBC,SAASb,EAAaY,oBAAoBE,aAAW,CAACd,EAAcpD,IAE/FmE,EAAkBX,uBAAY,WAAO,IACpCY,EAML,OAPwC,SACnCA,KADmC,UACnCA,EADmC,gBACnCA,EADmC,uBACnCA,MADmC,KAOhCrD,GACN,KAAKqD,EAAOC,OACV,OAAOR,EAAgBE,QAAO,SAAA1D,GAAI,OAAKA,EAAKG,aAE9C,KAAK4D,EAAOE,UACV,OAAOT,EAAgBE,QAAO,SAAA1D,GAAI,OAAIA,EAAKG,aAE7C,KAAK4D,EAAOG,IACZ,QACE,OAAOV,KAEV,CAACT,EAAcrC,EAAQf,IAEpBwE,EAAeV,mBAAQ,kBAAMK,MAAmB,CAACf,EAAcrC,EAAQf,IAE7E,OACE,qCACE,qBAAKG,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAACS,EAAD,CACEC,MAAOA,EACPC,cAAeA,EACfC,OAAQA,EACRC,eAAgBA,EAChBC,qBAAsBA,EACtBC,0BAzCoB,kBAAMmC,EAAgB,SA6C9C,qBAAKlD,UAAU,QAAf,SACoB,IAAjBH,EAAMyE,OACH,cAAC,EAAD,IAEA,cAAC5E,EAAD,CACEG,MAAOwE,EACPvE,SAAUA,EACVC,aAAcA,aAQ3BA,GACC,cAACoC,EAAD,CACEjC,KAAMH,EACND,SAAUA,QC3GpByE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6795a5c5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  onSelect: ((todo: Todo) => void)\n  selectedTodo: Todo | null\n}\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    todos,\n    onSelect,\n    selectedTodo,\n  }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': selectedTodo?.id === todo.id },\n              )}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': selectedTodo?.id !== todo.id },\n                      { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import React from 'react';\n\ninterface Props {\n  query: string,\n  onQueryChange: (newQuery: string) => void,\n  status: string,\n  onStatusChange: (newStatus: string) => void,\n  onAppliedQueryChange: (newAppliedQuery: string) => void,\n  onResetAppliedQueryChange: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({\n    query,\n    onQueryChange,\n    status,\n    onStatusChange,\n    onAppliedQueryChange,\n    onResetAppliedQueryChange,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={status}\n              onChange={(event) => onStatusChange(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={event => {\n              onQueryChange(event.target.value);\n              onAppliedQueryChange(event.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  onQueryChange('');\n                  onResetAppliedQueryChange();\n                }}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = React.memo(\n  () => (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  ),\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo\n  onSelect: (todo: Todo | null) => void\n}\n\nexport const TodoModal: React.FC<Props> = React.memo(\n  ({ todo, onSelect }) => {\n    const {\n      id,\n      title,\n      userId,\n    } = todo;\n\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      getUser(userId).then(setUser);\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setUser(null);\n                  onSelect(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={user.email}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [status, setStatus] = useState('All');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const debounce = useCallback((f: (arg: string) => void, delay: number) => {\n    let timerId: number;\n\n    return (...args: string[]) => {\n      clearTimeout(timerId);\n      timerId = setTimeout(f, delay, ...args);\n    };\n  }, []);\n\n  const onSelect = useCallback(setSelectedTodo, []);\n\n  const onStatusChange = useCallback(setStatus, []);\n\n  const onQueryChange = useCallback(setQuery, []);\n\n  const onAppliedQueryChange = useCallback(\n    debounce(setAppliedQuery, 1000), [],\n  );\n\n  const onResetAppliedQueryChange = () => setAppliedQuery('');\n\n  const filteredbyQuery = useMemo(() => todos.filter(todo => (\n    todo.title.toLocaleLowerCase().includes(appliedQuery.toLocaleLowerCase().trim()))), [appliedQuery, todos]);\n\n  const getVisibleTodos = useCallback(() => {\n    enum Status {\n      All = 'All',\n      Active = 'active',\n      Complited = 'completed',\n    }\n\n    switch (status) {\n      case Status.Active:\n        return filteredbyQuery.filter(todo => !todo.completed);\n\n      case Status.Complited:\n        return filteredbyQuery.filter(todo => todo.completed);\n\n      case Status.All:\n      default:\n        return filteredbyQuery;\n    }\n  }, [appliedQuery, status, todos]);\n\n  const visibleTodos = useMemo(() => getVisibleTodos(), [appliedQuery, status, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={onQueryChange}\n                status={status}\n                onStatusChange={onStatusChange}\n                onAppliedQueryChange={onAppliedQueryChange}\n                onResetAppliedQueryChange={onResetAppliedQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelect={onSelect}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelect={onSelect}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}